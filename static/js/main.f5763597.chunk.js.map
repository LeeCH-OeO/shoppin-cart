{"version":3,"sources":["Item/Item.style.tsx","Item/Item.tsx","cartItem/CartItem.style.tsx","cartItem/CartItem.tsx","cart/Cart.style.tsx","cart/Cart.tsx","App.tsx","index.tsx"],"names":["Wrapper","styled","div","Item","item","handleAddToCart","src","image","alt","title","onClick","window","open","description","price","Button","CartItem","addToCart","removeFromCart","className","amount","toFixed","size","disableElevation","variant","id","aside","buy","setTimeout","Cart","items","cartItems","length","map","reduce","ark","color","startIcon","getProducts","a","fetch","json","App","useState","cartOpen","setCartOpen","setCartItems","useQuery","data","isLoading","error","clickedItem","prev","find","LinearProgress","AppBar","position","Toolbar","Drawer","anchor","onClose","ack","IconButton","Badge","badgeContent","Typography","Grid","container","spacing","xs","sm","href","target","rel","align","gutterBottom","client","QueryClient","ReactDOM","render","QueryClientProvider","document","getElementById"],"mappings":"kQAEaA,EAAUC,IAAOC,IAAV,uZ,OCmBLC,EAZe,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAMC,EAAR,EAAQA,gBAAR,OAC1B,eAACL,EAAD,WACI,qBAAKM,IAAMF,EAAKG,MAAOC,IAAMJ,EAAKK,MAAOC,QAAS,kBAAIC,OAAOC,KAAKR,EAAKG,UACvE,gCACI,6BAAKH,EAAKK,QACV,4BAAIL,EAAKS,cACT,mCAAMT,EAAKU,YAEf,cAACC,EAAA,EAAD,CAAQL,QAAS,kBAAIL,EAAgBD,IAArC,6BCfKJ,EAAUC,IAAOC,IAAV,yYC0CLc,EAhCmB,SAAC,GAAD,IAAEZ,EAAF,EAAEA,KAAMa,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,eAAnB,OAC9B,cAAC,EAAD,UACI,gCACI,6BAAKd,EAAKK,QACV,sBAAKU,UAAU,cAAf,UACI,yCAAYf,EAAKU,SACjB,0CAAaV,EAAKgB,OAAOhB,EAAKU,OAAOO,QAAQ,SAEjD,sBAAKF,UAAU,UAAf,UACI,cAACJ,EAAA,EAAD,CACAO,KAAK,QACLC,kBAAgB,EAChBC,QAAQ,YACRd,QAAS,kBAAMQ,EAAed,EAAKqB,KAJnC,eAQA,4BAAIrB,EAAKgB,SACT,cAACL,EAAA,EAAD,CACAO,KAAK,QACLC,kBAAgB,EAChBC,QAAQ,YACRd,QAAS,kBAAMO,EAAUb,IAJzB,wBC5BHJ,EAAUC,IAAOyB,MAAV,yG,iBCSdC,EAAI,WACNC,YAAW,WAAKjB,OAAOC,KAAK,kCAAkC,OA4BnDiB,EAxBe,SAAC,GAA6C,IACtDC,EADWC,EAA0C,EAA1CA,UAAWd,EAA+B,EAA/BA,UAAWC,EAAoB,EAApBA,eAInD,OACI,eAAC,EAAD,WACI,+FAGqB,IAApBa,EAAUC,OAAa,mDAAa,KACpCD,EAAUE,KAAI,SAAA7B,GAAI,OACf,cAAC,EAAD,CAAwBA,KAAMA,EAAMa,UAAWA,EAAWC,eAAgBA,GAA3Dd,EAAKqB,OAEF,IAApBM,EAAUC,QAAe,gCAAK,wDAZtBF,EAaeC,EAZ7BD,EAAMI,QAAO,SAACC,EAAa/B,GAAd,OAAuB+B,EAAM/B,EAAKgB,OAAShB,EAAKU,QAAO,IAY5BO,QAAQ,MACxC,cAACN,EAAA,EAAD,CAAQS,QAAQ,YAAYY,MAAM,UAAUC,UAAW,cAAC,IAAD,IACvD3B,QAASiB,EADT,iC,yFCLVW,EAAW,uCAAG,sBAAAC,EAAA,sEACNC,MAAM,qCADA,8BACsCC,OADtC,mFAAH,qDA+EFC,EA3EH,WAEV,IAKuBZ,EALvB,EAAgCa,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkCF,mBAAS,IAA3C,mBAAOZ,EAAP,KAAkBe,EAAlB,KACA,EAA+BC,YAAyB,UAAWT,GAA5DU,EAAP,EAAOA,KAAKC,EAAZ,EAAYA,UAAUC,EAAtB,EAAsBA,MAKhB7C,EAAkB,SAAC8C,GACvBL,GAAa,SAAAM,GAIX,OAFqBA,EAAKC,MAAK,SAAAjD,GAAI,OAAIA,EAAKqB,KAAO0B,EAAY1B,MAGtD2B,EAAKnB,KAAI,SAAA7B,GAAI,OAClBA,EAAKqB,KAAO0B,EAAY1B,GAAxB,2BAAgCrB,GAAhC,IAAsCgB,OAAOhB,EAAKgB,OAAO,IAAKhB,KAI5D,GAAN,mBAAWgD,GAAX,4BAAqBD,GAArB,IAAkC/B,OAAQ,UAiB9C,OAAG6B,EAAiB,cAACK,EAAA,EAAD,IACjBJ,EAAa,2CAId,gCACE,cAACK,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAQC,OAAQ,OAAO/C,KAAMgC,EAAUgB,QAAU,kBAAKf,GAAY,IAAlE,SACF,cAAC,EAAD,CAAMd,UAAWA,EAAWd,UAAWZ,EAAiBa,eAtBjC,SAACO,GAC5BqB,GAAa,SAAAM,GAAI,OACfA,EAAKlB,QAAO,SAAC2B,EAAKzD,GAChB,OAAGA,EAAKqB,KAAOA,EACM,IAAhBrB,EAAKgB,OAAqByC,EACvB,GAAN,mBAAUA,GAAV,4BAAmBzD,GAAnB,IAAyBgB,OAAQhB,EAAKgB,OAAO,MAEvC,GAAN,mBAAUyC,GAAV,CAAczD,MAEhB,YAeF,cAAC0D,EAAA,EAAD,CAAYpD,QAAU,kBAAMmC,GAAY,IAAOT,MAAM,UAArD,SACE,cAAC2B,EAAA,EAAD,CAAOC,cA1CUlC,EA0CkBC,EA1CQD,EAAMI,QAAO,SAAC2B,EAAazD,GAAd,OAAsByD,EAAMzD,EAAKgB,SAAQ,IA0ClDgB,MAAM,QAArD,SACE,cAAC,IAAD,QAES,cAAC6B,EAAA,EAAD,CAAYzC,QAAQ,YAApB,2CAIb,sBACA,cAAC0C,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,gBACIpB,QADJ,IACIA,OADJ,EACIA,EAAMf,KAAI,SAAA7B,GAAI,OACd,cAAC8D,EAAA,EAAD,CAAM9D,MAAI,EAAeiE,GAAI,GAAIC,GAAI,EAArC,SACE,cAAC,EAAD,CAAMlE,KAAQA,EAAMC,gBAAkBA,KADxBD,EAAKqB,SAKzB,sBACA,iCACI,mBAAG8C,KAAK,6CAA6CC,OAAO,SAASC,IAAI,aAAzE,SACI,cAACR,EAAA,EAAD,CAAYS,MAAM,SAAStC,MAAM,gBAAgBuC,cAAY,EAA7D,mCC5FRC,EAAS,IAAIC,IAEnBC,IAASC,OACP,cAACC,EAAA,EAAD,CAAqBJ,OAAQA,EAA7B,SACE,cAAC,EAAD,MAIFK,SAASC,eAAe,W","file":"static/js/main.f5763597.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\ndisplay: flex;\njustify-content: space-between;\nflex-direction: column;\nwidth: 100%;\nborder: 2px solid lightblue;\nborder-radius: 20px;\nheight: 100%;\nbutton {\n  border-radius: 0 0 20px 20px;\n}\nimg {\n  max-height: 200px;\n  object-fit: cover;\n  border-radius: 20px 20px 0 0;\n}\ndiv {\n  font-family: Arial, Helvetica, sans-serif;\n  padding: 1rem;\n  height: 100%;\n}\n`","import { Button } from \"@material-ui/core\";\nimport { CartItemType } from \"../App\";\nimport { Wrapper } from \"./Item.style\";\n\ntype Props = {\n    item: CartItemType;\n    handleAddToCart: (clickedItem: CartItemType) => void;\n\n}\nconst Item: React.FC<Props> = ({item, handleAddToCart}) =>(\n    <Wrapper>\n        <img src= {item.image} alt= {item.title} onClick={()=>window.open(item.image)}/>\n        <div>\n            <h3>{item.title}</h3>\n            <p>{item.description}</p>\n            <h3>${item.price}</h3>\n        </div>\n        <Button onClick={()=>handleAddToCart(item)}>Add to Cart</Button>\n    </Wrapper>\n)\n\nexport default Item","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  font-family: Arial, Helvetica, sans-serif;\n  border-bottom: 1px solid lightblue;\n  padding-bottom: 20px;\n  div {\n    flex: 1;\n  }\n  .information, .buttons {\n    display: flex;\n    justify-content: space-between;\n  }\n  img {\n    max-width: 80px;\n    object-fit: cover;\n    margin-left: 40px;\n  }\n`;","import { Button } from \"@material-ui/core\";\n\nimport { CartItemType } from \"../App\";\n\nimport { Wrapper } from \"./CartItem.style\";\n\ntype Props = {\n    item: CartItemType;\n    addToCart: (clickedItem: CartItemType) => void;\n    removeFromCart: (id: number) => void;\n}\n\nconst CartItem: React.FC<Props> = ({item, addToCart, removeFromCart})=> (\n    <Wrapper>\n        <div>\n            <h3>{item.title}</h3>\n            <div className=\"information\">\n                <p>Price: ${item.price}</p>\n                <p>Total: ${(item.amount*item.price).toFixed(2)}</p>\n            </div>\n            <div className='buttons'>\n                <Button\n                size='small'\n                disableElevation\n                variant='contained'\n                onClick={() => removeFromCart(item.id)}\n                >\n                -\n                </Button>\n                <p>{item.amount}</p>\n                <Button\n                size='small'\n                disableElevation\n                variant='contained'\n                onClick={() => addToCart(item)}\n                >\n                +\n                </Button>\n            </div>\n        </div>\n        \n    </Wrapper>\n)\n\nexport default CartItem;","import styled from \"styled-components\";\n\nexport const Wrapper = styled.aside`\nfont-family: Arial, Helvetica, sans-serif;\nwidth: 300px;\npadding: 10px;\n\n`","import CartItem from \"../cartItem/CartItem\";\nimport { Wrapper } from \"./Cart.style\";\nimport { CartItemType } from \"../App\";\nimport { Button } from \"@material-ui/core\";\nimport CreditCardSharpIcon from '@material-ui/icons/CreditCardSharp';\n\ntype Props = {\n    cartItems: CartItemType[];\n    addToCart: (clickedItem: CartItemType) => void;\n    removeFromCart: (id:number) => void;\n}\nconst buy=()=>{\n    setTimeout(()=>{window.open('https://youtu.be/DuxARwgmw-o') },1500)\n    \n\n}\nconst Cart: React.FC<Props> = ({ cartItems, addToCart, removeFromCart }) =>{\n    const calTotal = (items: CartItemType[])=>\n        items.reduce((ark: number, item) => ark + item.amount * item.price, 0)\n    \n    return(\n        <Wrapper>\n            <h2>\n                ‰Ω†ÁöÑË≥ºÁâ©ËªäËªä üõíüí®\n            </h2>\n            {cartItems.length ===0 ?<p>Ê≤íÊù±Ë•ø</p> : null}\n            {cartItems.map(item => (\n                <CartItem key={item.id} item={item} addToCart={addToCart} removeFromCart={removeFromCart}/>\n            ))}\n            {(cartItems.length !==0)&&(<div><h2 >\n                Total üí∏: ${calTotal(cartItems).toFixed(2)}</h2> \n                <Button variant=\"contained\" color=\"primary\" startIcon={<CreditCardSharpIcon/>} \n                onClick={buy}>\n                    Ë≤∑ÂñÆ\n                </Button></div>\n            )}\n            \n        </Wrapper>\n    )\n}\nexport default Cart","import{ useState } from 'react';\nimport{ useQuery } from 'react-query';\n\nimport Item from './Item/Item';\nimport Cart from './cart/Cart';\nimport Drawer from '@material-ui/core/Drawer';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Grid from '@material-ui/core/Grid';\nimport ShoppingCartSharpIcon from '@material-ui/icons/ShoppingCartSharp';\nimport Badge from '@material-ui/core/Badge';\nimport { AppBar, Typography } from '@material-ui/core';\nimport  IconButton  from \"@material-ui/core/IconButton\";\nimport { Toolbar } from '@material-ui/core';\n\n\n\n//types\nexport type CartItemType = {\n  id: number;\n  category: string;\n  description: string;\n  image: string;\n  price: number;\n  title: string;\n  amount: number;\n}\nconst getProducts = async (): Promise<CartItemType[]> =>\n  await(await fetch('https://fakestoreapi.com/products')).json();\n\n\nconst App = ()=>{\n\n  const [cartOpen, setCartOpen] = useState(false)\n  const [cartItems, setCartItems] = useState([] as CartItemType[])\n  const {data,isLoading,error} = useQuery<CartItemType[]>('product', getProducts)\n\n\n  const getTotalItems = (items: CartItemType[]) => items.reduce((ack: number, item)=> ack + item.amount, 0)\n\n  const handleAddToCart = (clickedItem: CartItemType) => {\n    setCartItems(prev => {\n      // Is the item already added in the cart ?\n      const isItemInCart = prev.find(item => item.id === clickedItem.id)\n\n      if(isItemInCart){\n        return prev.map(item =>(\n          item.id === clickedItem.id? {...item, amount:item.amount+1} : item\n        ))\n      }\n      // First time added\n      return [...prev, {...clickedItem, amount: 1}]\n    })\n  }\n\n  const handleRemoveFromCart = (id: number) => {\n    setCartItems(prev=>(\n      prev.reduce((ack, item)=> {\n        if(item.id === id){\n          if(item.amount === 1) return ack;\n          return[...ack, {...item, amount: item.amount-1}]\n        }else {\n          return[...ack,item]\n        }\n      },[] as CartItemType[])\n    ))\n  }\n\n  if(isLoading) return<LinearProgress />\n  if(error) return<div>error :(</div>\n\n\n  return (\n    <div>\n      <AppBar position='sticky'>\n        <Toolbar>\n          <Drawer anchor= 'left' open={cartOpen} onClose= {()=> setCartOpen(false)}>\n        <Cart cartItems={cartItems} addToCart={handleAddToCart} removeFromCart={handleRemoveFromCart}/>\n      </Drawer>\n      <IconButton onClick= {() => setCartOpen(true)} color=\"inherit\">\n        <Badge badgeContent={getTotalItems(cartItems)} color='error'>\n          <ShoppingCartSharpIcon />\n        </Badge>\n      </IconButton><Typography variant=\"subtitle1\" >Ë≥ºÁâ©Á∂≤Á´ô</Typography>\n      \n      </Toolbar>        \n      </AppBar>\n      <p></p>      \n      <Grid container spacing={2}>\n        { data?.map(item => (\n          <Grid item key={item.id} xs={12} sm={2}>\n            <Item item = {item} handleAddToCart= {handleAddToCart}/>\n          </Grid>\n        )) }\n      </Grid>\n      <p></p>\n      <footer >\n          <a href=\"https://github.com/LeeCH-OeO/shopping-cart\" target=\"_blank\" rel=\"noreferrer\">\n              <Typography align=\"center\" color=\"textSecondary\" gutterBottom >\n          ¬©LeeCH-OeO \n          </Typography></a>         \n          </footer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport{ QueryClient, QueryClientProvider } from 'react-query'\nimport App from './App';\n\nconst client = new QueryClient()\n\nReactDOM.render(\n  <QueryClientProvider client={client}>\n    <App />\n  \n  </QueryClientProvider>,\n  \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}